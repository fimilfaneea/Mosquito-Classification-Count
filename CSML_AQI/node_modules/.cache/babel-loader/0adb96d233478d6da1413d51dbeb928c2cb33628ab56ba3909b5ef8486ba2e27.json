{"ast":null,"code":"var _jsxFileName = \"F:\\\\CSML\\\\CSML_AQI\\\\src\\\\pages\\\\Audio.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Audio = () => {\n  _s();\n  const [matchingResults, setMatchingResults] = React.useState([]);\n  const [noMatch, setNoMatch] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const sampleList = [1, 2, 3, 4, 5]; // Renamed imageList to sampleList\n\n  const handleClick = sampleNumber => {\n    // Ensure the parameter is named descriptively\n    setIsLoading(true);\n    setMatchingResults([]);\n    setNoMatch(false);\n    const baseUrl = 'http://127.0.0.1:5000/analyze-audio';\n    const url = `${baseUrl}/${sampleNumber}`; // Ensure the sampleNumber is directly used in the URL\n    fetch(url).then(res => res.json()).then(res => {\n      if (res.success) {\n        setMatchingResults(res.data[0]);\n      } else {\n        setNoMatch(true);\n      }\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-5\",\n      children: [\" \", sampleList === null || sampleList === void 0 ? void 0 : sampleList.map(sample => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-10\",\n        onClick: () => handleClick(sample) // Ensure integers are passed to handleClick\n        ,\n        style: {\n          backgroundColor: '#E1F4F3',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        } // Apply inline styles\n        ,\n        children: [\"Sample \", sample]\n      }, sample, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center\",\n      children: [matchingResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [matchingResults.folder_name, matchingResults.matching_percentage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), noMatch && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No match \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Audio, \"fw2DwgLj7myhuKOsxGAHL1AuBpU=\");\n_c = Audio;\nexport default Audio;\nvar _c;\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Audio","_s","matchingResults","setMatchingResults","useState","noMatch","setNoMatch","isLoading","setIsLoading","sampleList","handleClick","sampleNumber","baseUrl","url","fetch","then","res","json","success","data","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","sample","onClick","style","backgroundColor","borderRadius","cursor","folder_name","matching_percentage","_c","$RefreshReg$"],"sources":["F:/CSML/CSML_AQI/src/pages/Audio.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Audio = () => {\r\n    const [matchingResults, setMatchingResults] = React.useState([]);\r\n    const [noMatch, setNoMatch] = React.useState(false);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n    const sampleList = [1, 2, 3, 4, 5]; // Renamed imageList to sampleList\r\n\r\n    const handleClick = (sampleNumber) => { // Ensure the parameter is named descriptively\r\n        setIsLoading(true);\r\n        setMatchingResults([]);\r\n        setNoMatch(false);\r\n        const baseUrl = 'http://127.0.0.1:5000/analyze-audio';\r\n        const url = `${baseUrl}/${sampleNumber}`; // Ensure the sampleNumber is directly used in the URL\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.success) {\r\n                    setMatchingResults(res.data[0]);\r\n                } else {\r\n                    setNoMatch(true);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    if (isLoading)\r\n        return <div>Loading....</div>;\r\n\r\n    return (\r\n        <>\r\n            <div className='flex justify-center gap-5'> {/* Changed flex class and added justify-center */}\r\n                {sampleList?.map((sample) => (\r\n                    <div \r\n                        className='p-10' \r\n                        key={sample}\r\n                        onClick={() => handleClick(sample)} // Ensure integers are passed to handleClick\r\n                        style={{ backgroundColor: '#E1F4F3', borderRadius: '5px', cursor: 'pointer' }} // Apply inline styles\r\n                    >\r\n                        Sample {sample}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className='flex justify-center items-center'>\r\n                {matchingResults && (\r\n                    <div>\r\n                        {matchingResults.folder_name}\r\n                        {matchingResults.matching_percentage}\r\n                    </div>\r\n                )}\r\n                {noMatch && (<div>No match </div>)} \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Audio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}