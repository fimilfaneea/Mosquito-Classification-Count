{"ast":null,"code":"var _jsxFileName = \"F:\\\\CSML\\\\CSML_AQI\\\\src\\\\pages\\\\Images.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Images = () => {\n  _s();\n  const baseUrl = 'http://127.0.0.1:5000/analyze-mosquitoes';\n  const [imageNumber, setImageNumber] = React.useState(null);\n  const imageList = [1, 2, 3, 4, 5];\n\n  // Array containing different text content for each button\n  const textList = [\"Text for Sample 1\", \"Text for Sample 2\", \"Text for Sample 3\", \"Text for Sample 4\", \"Text for Sample 5\"];\n  const containerStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '20px'\n  };\n  const buttonsContainerStyle = {\n    display: 'flex',\n    gap: '10px'\n  };\n  const buttonStyle = {\n    backgroundColor: '#E1F4F3',\n    padding: '10px',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  };\n  const headingStyle = {\n    fontFamily: 'Arial',\n    fontSize: '20px',\n    marginBottom: '10px',\n    textDecoration: 'underline',\n    fontWeight: 'bold'\n  };\n  const spacerStyle = {\n    width: '20px' // Adjust the width for the desired space\n  };\n\n  // Function to handle button click and set the image number\n  const handleClick = item => {\n    setImageNumber(item);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      style: buttonsContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: spacerStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: headingStyle,\n        children: \"Image Count Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      style: buttonsContainerStyle,\n      children: imageList === null || imageList === void 0 ? void 0 : imageList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: index === 0 ? {\n          ...buttonStyle,\n          marginLeft: '20px'\n        } : buttonStyle,\n        onClick: () => handleClick(item),\n        children: [\"Sample \", item]\n      }, item, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: imageNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [textList[imageNumber - 1], /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${baseUrl}/${imageNumber}`,\n          width: 500,\n          height: 250\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Images, \"r7y/FPFW7gSV7VIL9Cy0Zh2V6JA=\");\n_c = Images;\nexport default Images;\nvar _c;\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Images","_s","baseUrl","imageNumber","setImageNumber","useState","imageList","textList","containerStyle","display","flexDirection","gap","buttonsContainerStyle","buttonStyle","backgroundColor","padding","borderRadius","cursor","headingStyle","fontFamily","fontSize","marginBottom","textDecoration","fontWeight","spacerStyle","width","handleClick","item","style","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","marginLeft","onClick","src","height","_c","$RefreshReg$"],"sources":["F:/CSML/CSML_AQI/src/pages/Images.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Images = () => {\r\n    const baseUrl = 'http://127.0.0.1:5000/analyze-mosquitoes';\r\n    const [imageNumber, setImageNumber] = React.useState(null);\r\n    const imageList = [1, 2, 3, 4, 5];\r\n    \r\n    // Array containing different text content for each button\r\n    const textList = [\r\n        \"Text for Sample 1\",\r\n        \"Text for Sample 2\",\r\n        \"Text for Sample 3\",\r\n        \"Text for Sample 4\",\r\n        \"Text for Sample 5\",\r\n    ];\r\n\r\n    const containerStyle = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '20px',\r\n    };\r\n\r\n    const buttonsContainerStyle = {\r\n        display: 'flex',\r\n        gap: '10px',\r\n    };\r\n\r\n    const buttonStyle = {\r\n        backgroundColor: '#E1F4F3',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n    };\r\n\r\n    const headingStyle = {\r\n        fontFamily: 'Arial',\r\n        fontSize: '20px',\r\n        marginBottom: '10px',\r\n        textDecoration: 'underline',\r\n        fontWeight: 'bold',\r\n    };\r\n\r\n    const spacerStyle = {\r\n        width: '20px', // Adjust the width for the desired space\r\n    };\r\n\r\n    // Function to handle button click and set the image number\r\n    const handleClick = (item) => {\r\n        setImageNumber(item);\r\n    };\r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            <div className='dashboard'>\r\n                {/* Your dashboard content here */}\r\n            </div>\r\n            <div className='flex' style={buttonsContainerStyle}>\r\n                <div style={spacerStyle}></div> {/* Empty div for horizontal space */}\r\n                <div style={headingStyle}>Image Count Detection</div>\r\n            </div>\r\n            <div className='flex' style={buttonsContainerStyle}>\r\n                {imageList?.map((item, index) => (\r\n                    <div style={index === 0 ? { ...buttonStyle, marginLeft: '20px' } : buttonStyle} key={item} onClick={() => handleClick(item)}>\r\n                        Sample {item}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className='flex justify-center'>\r\n                {imageNumber && (\r\n                    <div>\r\n                        {textList[imageNumber - 1]}\r\n                        <img src={`${baseUrl}/${imageNumber}`} width={500} height={250} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Images;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}